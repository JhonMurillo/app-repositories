## HTTP Server
#server:
#  port: 8086   
#  
## Discovery Server Access
##eureka:
##  client:
##    serviceUrl:
##      defaultZone: http://discovery-server:1111/eureka/
##eureka.instance.client.serviceUrl.defaultZone: http://discovery-server:1111/eureka/
#
#eureka:
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://localhost:1111/eureka/
#  instance:
#     preferIpAddress: true

#zuul:
#  #ignoredServices: "*"
#  prefix: /admin
  #routes:
   # product: /product/**
#
#info:
#  component: Admin Server
#  
#server:
#  port: 8086
#  #ssl:
#  #  enabled: false

#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 20000
#
#ribbon:
#  ReadTimeout: 20000
#  ConnectTimeout: 20000

#zuul:
#  ignoredServices: '*'
#  host:
#    connect-timeout-millis: 20000
#    socket-timeout-millis: 20000
#
#  routes:
#
#
#
#    notification-service:
#        path: /notifications/**
#        serviceId: notification-service
#        stripPrefix: false
#        sensitiveHeaders:

#server:
#  port: 8086
  
#eureka:
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://localhost:1111/eureka/
#  instance:
#     preferIpAddress: true

server:
  port: 8086
  
zuul:
#  ignoredServices: "*"
  prefix: /admin
  routes:
#    APP-SERVICE: /app/**
##
    app-service:
        path: /app/**
        serviceId: app-service
        
    project-service:
        path: /pro/**
        serviceId: project-service
        
eureka:
  instance:
    leaseRenewalIntervalInSeconds: 3
    preferIpAddress: true
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
  client:
    # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:1111/eureka/
      
spring:
    profiles:
         active: native
  
#eureka:
#   instance:
#    leaseRenewalIntervalInSeconds: 3
#    preferIpAddress: true
#      metadataMap:
#       instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://localhost:1111/eureka/
#  
#eureka:
##  instance:
##    leaseRenewalIntervalInSeconds: 3
##    preferIpAddress: true
##    metadataMap:
##      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
#  client:
#    # Default values comes from org.springframework.cloud.netflix.eurek.EurekaClientConfigBean
#    registerWithEureka: true
#    fetchRegistry: true
##    registryFetchIntervalSeconds: 5
##    instanceInfoReplicationIntervalSeconds: 5
##    initialInstanceInfoReplicationIntervalSeconds: 5
#    serviceUrl:
#      defaultZone: http://localhost:1111/eureka/
#spring:
#    profiles:
#         active: native
  
#  
hystrix.command.default.execution.isolation.strategy: THREAD 
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 80000
hystrix.command.default.execution.timeout.enabled: false
hystrix.threadpool.default.coreSize: 50
hystrix.threadpool.default.maxQueueSize: 100
hystrix.threadpool.default.queueSizeRejectionThreshold: 50
#
ribbon:
# Max number of retries on the same server (excluding the first try)
  maxAutoRetries: 1
# Max number of next servers to retry (excluding the first server)
  MaxAutoRetriesNextServer: 2
# Connect timeout used by Apache HttpClient
  ConnectTimeout: 80000
# Read timeout used by Apache HttpClient
  ReadTimeout: 80000
